{"ast":null,"code":"var _jsxFileName = \"D:\\\\.TRUTH\\\\React-projects\\\\movies-list\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true);\n    fetch('https://twitter.github.io/typeahead.js/data/films/post_1960.jn').then(x => {\n      if (!x.ok) throw new Error(x.statusText);\n      return x;\n    }).then(x => x.json()).then(x => setMovies(x)).catch(error => error.message);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 47\n    }\n  }, \"Found no movies\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading....\")));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/.TRUTH/React-projects/movies-list/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","fetch","then","x","ok","Error","statusText","json","catch","error","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASO,kBAAT,GAA8B;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAE,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACGC,IADH,CACQC,CAAC,IAAI;AACT,UAAI,CAACA,CAAC,CAACC,EAAP,EAAW,MAAM,IAAIC,KAAJ,CAAUF,CAAC,CAACG,UAAZ,CAAN;AACX,aAAOH,CAAP;AACD,KAJH,EAKGD,IALH,CAKQC,CAAC,IAAIA,CAAC,CAACI,IAAF,EALb,EAMGL,IANH,CAMQC,CAAC,IAAIN,SAAS,CAACM,CAAD,CANtB,EAOGK,KAPH,CAOSC,KAAK,IAAIA,KAAK,CAACC,OAPxB;AASAX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,IAAcF,MAAM,CAACe,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEf,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACe,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFxC,EAGGb,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHhB,CAJF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true);\n\n    fetch('https://twitter.github.io/typeahead.js/data/films/post_1960.jn')\n      .then(x => {\n        if (!x.ok) throw new Error(x.statusText)\n        return x;\n      })\n      .then(x => x.json())\n      .then(x => setMovies(x))\n      .catch(error => error.message)\n\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Found no movies</p>}\n        {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}