{"ast":null,"code":"var _jsxFileName = \"D:\\\\.TRUTH\\\\React-projects\\\\order-food\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isEmpty(v) {\n  return v.trim() === '';\n}\n\nfunction isFiveChars(v) {\n  return v.trim().length === 5;\n}\n\nconst Checkput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n\n  function confirmHandler(e) {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = nameInputRef.current.value;\n    const enteredPostal = nameInputRef.current.value;\n    const enteredCity = nameInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal ccode!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"City\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"City\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Checkput, \"p9Syt5KSuCKcqoqTbyUYRx2RJgU=\");\n\n_c = Checkput;\nexport default Checkput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkput\");","map":{"version":3,"sources":["D:/.TRUTH/React-projects/order-food/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","v","trim","isFiveChars","length","Checkput","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","formInputValidity","setFormInputValidity","name","street","city","postalCode","confirmHandler","e","preventDefault","enteredName","current","value","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css'\r\nfunction isEmpty(v) { return v.trim() === '' }\r\nfunction isFiveChars(v) { return v.trim().length === 5 }\r\nconst Checkput = props => {\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    });\r\n\r\n    function confirmHandler(e) {\r\n        e.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = nameInputRef.current.value;\r\n        const enteredPostal = nameInputRef.current.value;\r\n        const enteredCity = nameInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalIsValid = isFiveChars(enteredPostal);\r\n\r\n        setFormInputValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    return <form className={classes.form} onSubmit={confirmHandler}>\r\n        <div className={classes.control}>\r\n            <label htmlFor='name'>Your Name</label>\r\n            <input type='text' id='name' ref={nameInputRef} />\r\n            {!formInputValidity.name && <p>Please enter a valid name!</p>}\r\n        </div>\r\n\r\n\r\n        <div className={`${classes.control}`}>\r\n            <label htmlFor='street'>Street</label>\r\n            <input type='text' id='street' ref={streetInputRef} />\r\n            {!formInputValidity.street && <p>Please enter a valid street!</p>}\r\n\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n            <label htmlFor='postal'>Postal Code</label>\r\n            <input type='text' id='postal' ref={postalInputRef} />\r\n            {!formInputValidity.postalCode && <p>Please enter a valid postal ccode!</p>}\r\n\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n            <label htmlFor='City'>City</label>\r\n            <input type='text' id='City' ref={cityInputRef} />\r\n            {!formInputValidity.city && <p>Please enter a valid city!</p>}\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n            <button type='button' onClick={props.onCancel}>Cancel</button>\r\n            <button className={classes.submit}>Confirm</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default Checkput;"]},"metadata":{},"sourceType":"module"}