{"ast":null,"code":"var _jsxFileName = \"D:\\\\.TRUTH\\\\React-projects\\\\order-food\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  function cartItemRemoveHandler(id) {\n    cartCtx.removeItem(id);\n  }\n\n  function cartItemHandler(item) {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  }\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  function submitOrderHandler(userData) {\n    fetch('https://luck-5df31-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n  }\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 27\n  }, this);\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/.TRUTH/React-projects/order-food/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","modalActions","actions","onClose","button","cartItems","map","name","price","bind","total"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMU,OAAO,GAAGX,UAAU,CAACK,WAAD,CAA1B;AAEA,QAAMO,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,WAASC,qBAAT,CAA+BC,EAA/B,EAAmC;AAC/BP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACH;;AACD,WAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAE,GAAGD,IAAL;AAAWE,MAAAA,MAAM,EAAE;AAAnB,KAAhB;AACH;;AAED,QAAMC,YAAY,GAAG,MAAM;AACvBd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAGA,WAASe,kBAAT,CAA4BC,QAA5B,EAAsC;AAClCC,IAAAA,KAAK,CAAC,4DAAD,EAA+D;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEN,QADW;AAEjBO,QAAAA,YAAY,EAAEtB,OAAO,CAACI;AAFL,OAAf;AAF0D,KAA/D,CAAL;AAOH;;AAED,QAAMmB,YAAY,gBAAI;AAAK,IAAA,SAAS,EAAE9B,OAAO,CAAC+B,OAAxB;AAAA,4BAClB;AAAQ,MAAA,SAAS,EAAE/B,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEI,KAAK,CAAC4B,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,EAEjBtB,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAEV,OAAO,CAACiC,MAA3B;AAAmC,MAAA,OAAO,EAAEb,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAKA,QAAMc,SAAS,gBACX;AAAI,IAAA,SAAS,EAAElC,OAAO,CAAC,YAAD,CAAtB;AAAA,cACKO,OAAO,CAACI,KAAR,CAAcwB,GAAd,CAAkBlB,IAAI,iBACnB,QAAC,QAAD;AAEI,MAAA,IAAI,EAAEA,IAAI,CAACmB,IAFf;AAGI,MAAA,MAAM,EAAEnB,IAAI,CAACE,MAHjB;AAII,MAAA,KAAK,EAAEF,IAAI,CAACoB,KAJhB;AAKI,MAAA,QAAQ,EAAExB,qBAAqB,CAACyB,IAAtB,CAA2B,IAA3B,EAAiCrB,IAAI,CAACH,EAAtC,CALd;AAMI,MAAA,KAAK,EAAEE,eAAe,CAACsB,IAAhB,CAAqB,IAArB,EAA2BrB,IAA3B;AANX,OACSA,IAAI,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;;AAcA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEV,KAAK,CAAC4B,OAAtB;AAAA,eACKE,SADL,eAEI;AAAK,MAAA,SAAS,EAAElC,OAAO,CAACuC,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAO/B;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMKH,UAAU,iBAAI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEgB,kBAArB;AAAyC,MAAA,QAAQ,EAAEjB,KAAK,CAAC4B;AAAzD;AAAA;AAAA;AAAA;AAAA,YANnB,EAOK,CAAC3B,UAAD,IAAeyB,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzDQ3B,I;;KAAAA,I;AA2DT,eAAeA,IAAf","sourcesContent":["import { useContext, useState } from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport Checkout from './Checkout';\r\n\r\nfunction Cart(props) {\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.length > 0;\r\n\r\n    function cartItemRemoveHandler(id) {\r\n        cartCtx.removeItem(id);\r\n    }\r\n    function cartItemHandler(item) {\r\n        cartCtx.addItem({ ...item, amount: 1 })\r\n    }\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    }\r\n    function submitOrderHandler(userData) {\r\n        fetch('https://luck-5df31-default-rtdb.firebaseio.com/orders.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: userData,\r\n                orderedItems: cartCtx.items\r\n            })\r\n        })\r\n    }\r\n\r\n    const modalActions = (<div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n    </div>);\r\n\r\n    const cartItems =\r\n        <ul className={classes['cart-items']}>\r\n            {cartCtx.items.map(item => (\r\n                <CartItem\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    amount={item.amount}\r\n                    price={item.price}\r\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                    onAdd={cartItemHandler.bind(null, item)}\r\n                />\r\n            ))}\r\n        </ul>\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n            {!isCheckout && modalActions}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}